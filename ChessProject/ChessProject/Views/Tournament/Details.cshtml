@using ChessProject.DL.Enums
@using ChessProject.Extensions
@using ChessProject.Models.Tournament
@model TournamentDetailsDTO

<h1>Tournament Details</h1>
<hr />
<dl class="row">
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.Name)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.Name)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.Location)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.Location)</dt>
	<dt class="col-sm-2">Number of players</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.MinPlayers) - @Html.DisplayFor(model => model.MaxPlayers)</dt>
	<dt class="col-sm-2">ELO rank range</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.MinElo) - @Html.DisplayFor(model => model.MaxElo)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.Categories)</dt>
	<dt class="col-sm-10">
		@foreach(var cat in Model.Categories)
		{
			<span class="badge bg-primary me-1">@cat</span>
		}
	</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.Status)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.Status)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.CurrentRound)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.CurrentRound)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.WomenOnly)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.WomenOnly)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.RegistrationDeadline)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.RegistrationDeadline)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.CreatedAt)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.CreatedAt)</dt>
	<dt class="col-sm-2">@Html.DisplayNameFor(model => model.UpdatedAt)</dt>
	<dt class="col-sm-10">@Html.DisplayFor(model => model.UpdatedAt)</dt>
</dl>
<div class="row justify-content-center">
	<div class="col-auto">
		<a class="btn btn-primary" asp-controller="Tournament" asp-action="ListTournament">Back to tournament list</a>
	</div>
	<div class="col-auto">
		@if (User.IsConnected())
		{
			<form asp-action="EnterTournament" asp-controller="Tournament" method="post" asp-route-id="@Model.Id">
				<button class="btn btn-primary" type="submit">Enter tournament</button>
			</form>
		}
	</div>
	<div class="col-auto">
		@if (User.IsConnected() && User.GetRole() == Role.Admin)
		{
			@if (Model.Status == TournamentStatus.WaitingForPlayers)
			{
				<form asp-action="DeleteTournament" asp-controller="Tournament" method="post" asp-route-id="@Model.Id">
					<button class="btn btn-danger" type="submit" onclick="return confirm('Are you sure you want to delete this tournament?');">
						Delete
					</button>
				</form>
			}
		}
	</div>
</div>

@if (TempData["RegistrationError"] != null)
{
	<script>
		alert('@TempData["RegistrationError"]')
	</script>
}
